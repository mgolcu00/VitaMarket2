[{"/Users/mert/Desktop/vt_odev/client/vita-market/src/index.js":"1","/Users/mert/Desktop/vt_odev/client/vita-market/src/App.js":"2","/Users/mert/Desktop/vt_odev/client/vita-market/src/reportWebVitals.js":"3","/Users/mert/Desktop/vt_odev/client/vita-market/src/components/Dashboard/Dashboard.js":"4","/Users/mert/Desktop/vt_odev/client/vita-market/src/components/Market/Market.js":"5","/Users/mert/Desktop/vt_odev/client/vita-market/src/components/Login/Login.js":"6","/Users/mert/Desktop/vt_odev/client/vita-market/src/components/Login/Dealer.js":"7","/Users/mert/Desktop/vt_odev/client/vita-market/src/Modals/VitaminCard.js":"8","/Users/mert/Desktop/vt_odev/client/vita-market/src/context/ContextLib.js":"9","/Users/mert/Desktop/vt_odev/client/vita-market/src/Modals/ProteinCard.js":"10","/Users/mert/Desktop/vt_odev/client/vita-market/src/components/Basket/Basket.js":"11","/Users/mert/Desktop/vt_odev/client/vita-market/src/components/Search/Search.js":"12","/Users/mert/Desktop/vt_odev/client/vita-market/src/components/Basket/Address.js":"13"},{"size":500,"mtime":1629238226835,"results":"14","hashOfConfig":"15"},{"size":4279,"mtime":1629399450914,"results":"16","hashOfConfig":"15"},{"size":362,"mtime":1629238226837,"results":"17","hashOfConfig":"15"},{"size":184,"mtime":1629279725069,"results":"18","hashOfConfig":"15"},{"size":2313,"mtime":1629390296575,"results":"19","hashOfConfig":"15"},{"size":1668,"mtime":1629286388508,"results":"20","hashOfConfig":"15"},{"size":1733,"mtime":1629282089948,"results":"21","hashOfConfig":"15"},{"size":1112,"mtime":1629288618384,"results":"22","hashOfConfig":"15"},{"size":168,"mtime":1629279798506,"results":"23","hashOfConfig":"15"},{"size":1144,"mtime":1629390281964,"results":"24","hashOfConfig":"15"},{"size":3694,"mtime":1629397105579,"results":"25","hashOfConfig":"15"},{"size":1917,"mtime":1629392885540,"results":"26","hashOfConfig":"15"},{"size":2665,"mtime":1629399392983,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"cky1vq",{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"30"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"30"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"30"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"30"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"30"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/mert/Desktop/vt_odev/client/vita-market/src/index.js",[],["60","61"],"/Users/mert/Desktop/vt_odev/client/vita-market/src/App.js",["62","63","64"],"/Users/mert/Desktop/vt_odev/client/vita-market/src/reportWebVitals.js",[],"/Users/mert/Desktop/vt_odev/client/vita-market/src/components/Dashboard/Dashboard.js",[],"/Users/mert/Desktop/vt_odev/client/vita-market/src/components/Market/Market.js",["65","66"],"import React, { useEffect, useState } from 'react';\nimport VitaminCard from '../../Modals/VitaminCard';\nimport ProteinCard from '../../Modals/ProteinCard';\nimport { Grid, GridList } from '@material-ui/core'\nimport PropTypes from 'prop-types';\n\nasync function fetchVitamins() {\n    return fetch('http://localhost:3000/vitamin/', {\n        method: 'GET',\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    }).then(data => data.json());\n}\nasync function fetchProteins() {\n    return fetch('http://localhost:3000/protein/', {\n        method: 'GET',\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    })\n        .then(data => data.json())\n}\nexport default function Market({addBasket}) {\n    const [vitamins, setVitamins] = useState([]);\n    const [proteins, setProteins] = useState([]);\n    const [category, setCategory] = useState('vitamins');\n    useEffect(() => {\n        fetchVitamins().then(data => {\n            console.log(data);\n            setVitamins(data);\n        })\n        fetchProteins().then(data => {\n            console.log(data);\n            setProteins(data);\n        })\n    }, [])\n    const VitaminList = () => {\n        return (\n            <GridList spacing={2} >\n                {vitamins.map(v => <VitaminCard key={v.product.name} vitamin={v} addToCart={() => {\n                    addBasket(v.product.id)\n                }} />)}\n            </GridList>\n        );\n    }\n    const ProteinList = () => {\n        return (\n            <GridList spacing={2} >\n                {proteins.map(p => <ProteinCard key={p.id} protein={p} addToCart={() => {\n                    addBasket(p.product.id)\n                }}/>)}\n            </GridList>\n        );\n    }\n    const ListWithCategory = () => {\n        if (category === 'vitamins') {\n            return <VitaminList />;\n        } else if (category === 'proteins') {\n            return <ProteinList />;\n        }\n    }\n    const changeCategory = (e) => {\n        console.log(e);\n        setCategory(e)\n\n    }\n    return (\n        <div>\n            <h2>Market</h2>\n            <button onClick={(e) => changeCategory('vitamins')}>Vitaminler</button>\n            <button onClick={(e) => changeCategory('proteins')}>Proteinler</button>\n            <ListWithCategory />\n        </div>\n\n    );\n}\n","/Users/mert/Desktop/vt_odev/client/vita-market/src/components/Login/Login.js",[],"/Users/mert/Desktop/vt_odev/client/vita-market/src/components/Login/Dealer.js",[],"/Users/mert/Desktop/vt_odev/client/vita-market/src/Modals/VitaminCard.js",["67"],"import React, { useEffect, useState } from 'react';\nimport { Card, CardHeader, CardContent, CardActions, Button } from '@material-ui/core';\nimport './Modals.css'\n\nfunction fetchBrand(brand_id) {\n    return fetch(`http://localhost:3000/brand/${brand_id}`, {\n        method: 'GET',\n        headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json',\n        },\n    })\n        .then(response => response.json())\n}\n\nfunction VitaminCard({ vitamin, addToCart }) {\n    const [brand, setBrand] = useState();\n    fetchBrand(vitamin.product.brand_id)\n        .then(response => setBrand(response.name));\n\n    return (\n        <Card className=\"card-root\">\n            <CardHeader title={vitamin.product.name} />\n            <CardContent>\n                <h6>{brand} ®</h6>\n                <p>{vitamin.weight} mg</p>\n                <p>₺{vitamin.product.price}</p>\n            </CardContent>\n            <CardActions>\n                <Button color=\"primary\" onClick={addToCart}>Sepete Ekle</Button>\n            </CardActions>\n        </Card>\n    );\n}\n\nexport default VitaminCard;\n","/Users/mert/Desktop/vt_odev/client/vita-market/src/context/ContextLib.js",[],"/Users/mert/Desktop/vt_odev/client/vita-market/src/Modals/ProteinCard.js",["68"],"import React, { useEffect, useState } from 'react';\nimport { Card, CardHeader, CardContent, CardActions, Button } from '@material-ui/core';\nimport './Modals.css'\n\n\nfunction fetchBrand(brand_id) {\n    return fetch(`http://localhost:3000/brand/${brand_id}`, {\n        method: 'GET',\n        headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json',\n        },\n    })\n        .then(response => response.json())\n}\nexport default function ProteinCard({ protein,addToCart }) {\n    const [brand, setBrand] = useState();\n    fetchBrand(protein.product.brand_id)\n        .then(response => setBrand(response.name));\n\n    return (\n        <Card className=\"card-root\">\n            <CardHeader title={protein.product.name} />\n            <CardContent>\n                <h6>{brand} ®</h6>\n                <p>{protein.weight} mg</p>\n                <p>₺ {protein.product.price}</p>\n            </CardContent>\n            <CardActions>\n                <Button color=\"primary\" onClick={() => addToCart()}>\n                    Sepete Ekle\n                </Button>\n            </CardActions>\n        </Card>\n    );\n}\n","/Users/mert/Desktop/vt_odev/client/vita-market/src/components/Basket/Basket.js",["69","70","71","72","73"],"import React, { useEffect, useState } from 'react';\nimport { Card, CardHeader, CardContent, CardActions, Button } from '@material-ui/core';\n\nimport PropTypes from 'prop-types';\n\nfunction getProducts(basket_id) {\n    return fetch(`http://localhost:3000/basket/products/${basket_id}`,\n        {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        })\n        .then(response => response.json())\n}\nfunction removeProduct(basket_id, product_id) {\n    return fetch(`http://localhost:3000/basket/remove`,\n        {\n            method: 'DELETE',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n                basket_id: basket_id,\n                product_id: product_id,\n            }),\n        })\n        .then(response => response.json())\n}\n\nexport default function Basket() {\n    const [basketId, setBasketId] = useState(localStorage.getItem('basketId'));\n    const [products, setProducts] = useState([]);\n    const [basket_total, setBasket_total] = useState(0);\n\n\n    const initProducts = () => {\n        getProducts(basketId)\n            .then(products => {\n                if (products instanceof Array) {\n\n                    setProducts(products);\n                    let bt = 0\n                    products.forEach(product => {\n                        bt += product.price;\n                    });\n                    setBasket_total(bt);\n                }\n                else {\n                    if(products.name== 'error'){\n                        setProducts([]);\n                        setBasket_total(0);\n                        return;}\n                    products = [products];\n                    setProducts(products);\n                    let bt = 0\n                    products.forEach(product => {\n                        bt += product.price;\n                    });\n                    setBasket_total(bt);\n                }\n            });\n    };\n\n    useEffect(() => {\n        console.log('basketID: ' + basketId);\n        initProducts();\n    }, []);\n\n    const deleteProduct = (product_id) => {\n        console.log('pid: ' + product_id);\n        console.log('bid: ' + basketId);\n        removeProduct(basketId, product_id)\n            .then((res) => {\n                console.log(res);\n                initProducts();\n            });\n    };\n\n\n\n    const AllProducts = () => {\n        console.log(\"PRODUCTS :\" + JSON.stringify(products));\n        if (products.length > 0 && products.name != \"error\")\n            return (\n                <div>\n                    {products.map(product => {\n                        return (\n                            <div key={product.id}>\n                                <Card>\n                                    <CardHeader title={product.name} />\n                                    <CardContent>\n                                        <p>{product.price}</p>\n                                    </CardContent>\n                                    <CardActions>\n                                        <Button onClick={() => deleteProduct(product.id)}>Delete</Button>\n                                    </CardActions>\n                                </Card>\n                            </div>\n                        )\n                    })}\n                </div>\n            )\n        return (<div>No products in the basket</div>)\n    }\n    return (\n        <div className=\"basket\">\n            <h1>Basket</h1>\n            <AllProducts />\n            <p>Toplam Tutar : {basket_total}</p>\n        </div>\n    );\n}\n// Basket.propTypes = {\n//     basket_id: PropTypes.func.isRequired\n// }","/Users/mert/Desktop/vt_odev/client/vita-market/src/components/Search/Search.js",["74"],"import React, { useEffect, useState } from 'react';\nimport { Card, CardHeader, CardContent } from '@material-ui/core';\n\n\n\nfunction searchProducts(query) {\n    return fetch('http://localhost:3000/user/search', {\n        method: 'POST',\n        headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n            query: query\n        })\n    })\n        .then(response => response.json())\n        .catch(error => error.json());\n}\n\nexport default function Search() {\n    const [products, setProducts] = useState([]);\n    const [query, setQuery] = useState('');\n\n    const search = () => {\n        searchProducts(query+'%')\n            .then(response => {\n                if (response)\n                    setProducts(response);\n\n\n            }).catch(error => {\n                setProducts([]);\n            });\n    };\n    const AllProducts = () => {\n        if (products.length > 0)\n            return (\n                <div>\n                    {products.map(product => {\n                        return (\n                            <div key={product.id}>\n                                <Card>\n                                    <CardHeader title={product.name} />\n                                    <CardContent>\n                                        <p>{product.price}</p>\n                                    </CardContent>\n                                </Card>\n                            </div>\n                        )\n                    })}\n                </div>\n            )\n        return (<div>Not found products</div>)\n    }\n    return (\n        <div>\n            <input\n                type=\"text\"\n                value={query}\n                onChange={e => setQuery(e.target.value)}\n            />\n            <button onClick={() => search()}>Search</button>\n            <AllProducts />\n        </div>\n    );\n}\n","/Users/mert/Desktop/vt_odev/client/vita-market/src/components/Basket/Address.js",["75","76"],{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","severity":1,"message":"82","line":10,"column":10,"nodeType":"83","messageId":"84","endLine":10,"endColumn":20},{"ruleId":"81","severity":1,"message":"85","line":70,"column":10,"nodeType":"83","messageId":"84","endLine":70,"endColumn":16},{"ruleId":"86","severity":1,"message":"87","line":75,"column":6,"nodeType":"88","endLine":75,"endColumn":8,"suggestions":"89"},{"ruleId":"81","severity":1,"message":"90","line":4,"column":10,"nodeType":"83","messageId":"84","endLine":4,"endColumn":14},{"ruleId":"81","severity":1,"message":"91","line":5,"column":8,"nodeType":"83","messageId":"84","endLine":5,"endColumn":17},{"ruleId":"81","severity":1,"message":"92","line":1,"column":17,"nodeType":"83","messageId":"84","endLine":1,"endColumn":26},{"ruleId":"81","severity":1,"message":"92","line":1,"column":17,"nodeType":"83","messageId":"84","endLine":1,"endColumn":26},{"ruleId":"81","severity":1,"message":"91","line":4,"column":8,"nodeType":"83","messageId":"84","endLine":4,"endColumn":17},{"ruleId":"81","severity":1,"message":"93","line":32,"column":22,"nodeType":"83","messageId":"84","endLine":32,"endColumn":33},{"ruleId":"94","severity":1,"message":"95","line":50,"column":37,"nodeType":"96","messageId":"97","endLine":50,"endColumn":39},{"ruleId":"86","severity":1,"message":"98","line":68,"column":8,"nodeType":"88","endLine":68,"endColumn":10,"suggestions":"99"},{"ruleId":"94","severity":1,"message":"100","line":84,"column":50,"nodeType":"96","messageId":"97","endLine":84,"endColumn":52},{"ruleId":"81","severity":1,"message":"92","line":1,"column":17,"nodeType":"83","messageId":"84","endLine":1,"endColumn":26},{"ruleId":"81","severity":1,"message":"101","line":2,"column":62,"nodeType":"83","messageId":"84","endLine":2,"endColumn":70},{"ruleId":"86","severity":1,"message":"102","line":30,"column":8,"nodeType":"88","endLine":30,"endColumn":10,"suggestions":"103"},"no-native-reassign",["104"],"no-negated-in-lhs",["105"],"no-unused-vars","'AppContext' is defined but never used.","Identifier","unusedVar","'basket' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchBasket'. Either include it or remove the dependency array.","ArrayExpression",["106"],"'Grid' is defined but never used.","'PropTypes' is defined but never used.","'useEffect' is defined but never used.","'setBasketId' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has missing dependencies: 'basketId' and 'initProducts'. Either include them or remove the dependency array.",["107"],"Expected '!==' and instead saw '!='.","'duration' is defined but never used.","React Hook useEffect has a missing dependency: 'fetchAdress'. Either include it or remove the dependency array.",["108"],"no-global-assign","no-unsafe-negation",{"desc":"109","fix":"110"},{"desc":"111","fix":"112"},{"desc":"113","fix":"114"},"Update the dependencies array to be: [fetchBasket]",{"range":"115","text":"116"},"Update the dependencies array to be: [basketId, initProducts]",{"range":"117","text":"118"},"Update the dependencies array to be: [fetchAdress]",{"range":"119","text":"120"},[1973,1975],"[fetchBasket]",[2115,2117],"[basketId, initProducts]",[937,939],"[fetchAdress]"]