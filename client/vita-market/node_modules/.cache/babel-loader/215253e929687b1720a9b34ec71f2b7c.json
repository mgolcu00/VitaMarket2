{"ast":null,"code":"var _jsxFileName = \"/Users/mert/Desktop/vt_odev/client/vita-market/src/components/Basket/Address.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Card, CardHeader, CardContent, CardActions, Button } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction getAddress(user_id) {\n  return fetch(`http://localhost:3000/user/adress/${user_id}`, {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  }).then(response => response.json());\n}\n\nexport default function Address({\n  user_id\n}) {\n  _s();\n\n  const [address, setAddress] = useState();\n  useEffect(() => {\n    fetchAdress();\n  }, []);\n\n  const fetchAdress = () => {\n    getAddress(user_id).then(response => {\n      setAddress(response);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: address.adress,\n      value: address.adress,\n      onChange: e => {\n        setAddress({ ...address,\n          adress: e.target.value\n        });\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: address.city,\n      value: address.city,\n      onChange: e => {\n        setAddress({ ...address,\n          postal_code: e.target.value\n        });\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Address, \"No/ZgULY7Vt/oBqRyPE7FAxcXmc=\");\n\n_c = Address;\n\nvar _c;\n\n$RefreshReg$(_c, \"Address\");","map":{"version":3,"sources":["/Users/mert/Desktop/vt_odev/client/vita-market/src/components/Basket/Address.js"],"names":["React","useEffect","useState","Card","CardHeader","CardContent","CardActions","Button","getAddress","user_id","fetch","method","headers","then","response","json","Address","address","setAddress","fetchAdress","adress","e","target","value","city","postal_code"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,IAAT,EAAeC,UAAf,EAA2BC,WAA3B,EAAwCC,WAAxC,EAAqDC,MAArD,QAAmE,mBAAnE;;;AAEA,SAASC,UAAT,CAAoBC,OAApB,EAA6B;AACzB,SAAOC,KAAK,CAAE,qCAAoCD,OAAQ,EAA9C,EAAiD;AACzDE,IAAAA,MAAM,EAAE,KADiD;AAEzDC,IAAAA,OAAO,EAAE;AACL,sBAAgB;AADX;AAFgD,GAAjD,CAAL,CAMFC,IANE,CAMGC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EANf,CAAP;AAOH;;AAED,eAAe,SAASC,OAAT,CAAiB;AAAEP,EAAAA;AAAF,CAAjB,EAA8B;AAAA;;AACzC,QAAM,CAACQ,OAAD,EAAUC,UAAV,IAAwBhB,QAAQ,EAAtC;AACAD,EAAAA,SAAS,CAAC,MAAM;AACZkB,IAAAA,WAAW;AACd,GAFQ,EAEN,EAFM,CAAT;;AAKA,QAAMA,WAAW,GAAG,MAAM;AACtBX,IAAAA,UAAU,CAACC,OAAD,CAAV,CAAoBI,IAApB,CAAyBC,QAAQ,IAAI;AACjCI,MAAAA,UAAU,CAACJ,QAAD,CAAV;AACH,KAFD;AAGH,GAJD;;AAOA,sBAEI;AAAA,4BACI;AACI,MAAA,IAAI,EAAC,MADT;AAEI,MAAA,WAAW,EAAEG,OAAO,CAACG,MAFzB;AAGI,MAAA,KAAK,EAAEH,OAAO,CAACG,MAHnB;AAII,MAAA,QAAQ,EAAEC,CAAC,IAAI;AACXH,QAAAA,UAAU,CAAC,EACP,GAAGD,OADI;AAEPG,UAAAA,MAAM,EAAEC,CAAC,CAACC,MAAF,CAASC;AAFV,SAAD,CAAV;AAIH;AATL;AAAA;AAAA;AAAA;AAAA,YADJ,eAYI;AACI,MAAA,IAAI,EAAC,MADT;AAEI,MAAA,WAAW,EAAEN,OAAO,CAACO,IAFzB;AAGI,MAAA,KAAK,EAAEP,OAAO,CAACO,IAHnB;AAII,MAAA,QAAQ,EAAEH,CAAC,IAAI;AACXH,QAAAA,UAAU,CAAC,EACP,GAAGD,OADI;AAEPQ,UAAAA,WAAW,EAAEJ,CAAC,CAACC,MAAF,CAASC;AAFf,SAAD,CAAV;AAIH;AATL;AAAA;AAAA;AAAA;AAAA,YAZJ;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ;AA4BH;;GA1CuBP,O;;KAAAA,O","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Card, CardHeader, CardContent, CardActions, Button } from '@material-ui/core';\n\nfunction getAddress(user_id) {\n    return fetch(`http://localhost:3000/user/adress/${user_id}`, {\n        method: 'GET',\n        headers: {\n            'Content-Type': 'application/json',\n        },\n    })\n        .then(response => response.json())\n}\n\nexport default function Address({ user_id }) {\n    const [address, setAddress] = useState();\n    useEffect(() => {\n        fetchAdress()\n    }, []);\n\n\n    const fetchAdress = () => {\n        getAddress(user_id).then(response => {\n            setAddress(response);\n        });\n    };\n\n\n    return (\n\n        <div>\n            <input\n                type=\"text\"\n                placeholder={address.adress}\n                value={address.adress}\n                onChange={e => {\n                    setAddress({\n                        ...address,\n                        adress: e.target.value,\n                    });\n                }}\n            />\n            <input\n                type=\"text\"\n                placeholder={address.city}\n                value={address.city}\n                onChange={e => {\n                    setAddress({\n                        ...address,\n                        postal_code: e.target.value,\n                    });\n                }}\n            />\n        </div>\n        \n    );\n}"]},"metadata":{},"sourceType":"module"}