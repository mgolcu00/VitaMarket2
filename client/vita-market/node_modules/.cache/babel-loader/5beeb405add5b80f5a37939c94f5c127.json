{"ast":null,"code":"var _jsxFileName = \"/Users/mert/Desktop/vt_odev/client/vita-market/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './App.css';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport Dashboard from './components/Dashboard/Dashboard';\nimport Market from './components/Market/Market';\nimport Login from './components/Login/Login';\nimport { AppContext } from './context/ContextLib';\nimport Dealer from './components/Login/Dealer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [token, setToken] = useState(localStorage.getItem('token'));\n  return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: /*#__PURE__*/_jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/dealer\",\n        children: token ? /*#__PURE__*/_jsxDEV(Dashboard, {\n          token: token\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 20\n        }, this) : /*#__PURE__*/_jsxDEV(Dealer, {\n          setToken: setToken\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 51\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        children: token ? /*#__PURE__*/_jsxDEV(Market, {\n          token: token\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 20\n        }, this) : /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 47\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n} //   return (\n//     <AppContext.Provider value={{ token, setToken, userType, setUserType }}>\n//       <BrowserRouter>\n//         <Switch>\n//           {token ?\n//             <Route path=\"/dealer\" >\n//               <Dashboard token={token} />\n//             </Route>\n//             :\n//             <Route path=\"/dealer\" component={Dealer} />\n//           }\n//           <Route path=\"/market\" component={Market} />\n//           <Route path=\"/login\" component={Login} />\n//         </Switch>\n//       </BrowserRouter>\n//     </AppContext.Provider>\n//   );\n// }\n\n\n_s(App, \"0rjeTIWY0n0wEy6qOByiA/XtWpQ=\");\n\n_c = App;\nexport default App; //   if (!token) {\n//     return (\n//       <BrowserRouter>\n//         <Switch>\n//           <Route path=\"/login\"  >\n//             <Login setToken={setToken} setUserType={setUserType} />\n//           </Route>\n//           <Route path=\"/dealer\">\n//             <Delaer setToken={setToken} setUserType={setUserType} />\n//           </Route>\n//         </Switch>\n//       </BrowserRouter>)\n//   }\n//   if (userType === 'Dealer') {\n//     return (\n//       <AppContext.Provider value={{ token, setToken }}>\n//         <div className=\"wrapper\">\n//           <BrowserRouter>\n//             <Switch>\n//               <Route path=\"/dealer\" >\n//                 <Dashboard token={token} />\n//               </Route>\n//             </Switch>\n//           </BrowserRouter>\n//         </div>\n//       </AppContext.Provider>\n//     );\n//   }\n//   console.log(token);\n//   return (<BrowserRouter>\n//     <Switch>\n//       <Route path=\"/login/market\">\n//         <Market />\n//       </Route>\n//     </Switch>\n//   </BrowserRouter>)\n// }\n// if (userType === 'Dealer') {\n//   if (token) {\n//     return (\n//       <Route path=\"/dashboard\" >\n//         <Dashboard token={token} />\n//       </Route>\n//     );\n//   }\n//   return (\n//     <Route path=\"/dealer\" >\n//       <Dealer setToken={setToken} setUserType={setUserType} />\n//     </Route>\n//   );\n// }\n// else if (token) {\n//   return (\n//     <Route path=\"/market\" >\n//       <Market />\n//     </Route>\n//   );\n// }\n// else {\n//   return (\n//     <Route path=\"/login\" >\n//       <Login />\n//     </Route>\n//   );\n// }\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/mert/Desktop/vt_odev/client/vita-market/src/App.js"],"names":["React","useState","BrowserRouter","Route","Switch","Dashboard","Market","Login","AppContext","Dealer","App","token","setToken","localStorage","getItem"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,WAAP;AACA,SAASC,aAAT,EAAwBC,KAAxB,EAA+BC,MAA/B,QAA6C,kBAA7C;AACA,OAAOC,SAAP,MAAsB,kCAAtB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,KAAP,MAAkB,0BAAlB;AACA,SAASC,UAAT,QAA2B,sBAA3B;AACA,OAAOC,MAAP,MAAmB,2BAAnB;;;AACA,SAASC,GAAT,GAAe;AAAA;;AAGb,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAACY,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAD,CAAlC;AAGA,sBACE,QAAC,aAAD;AAAA,2BACE,QAAC,MAAD;AAAA,8BACE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,SAAZ;AAAA,kBACGH,KAAK,gBAAG,QAAC,SAAD;AAAW,UAAA,KAAK,EAAEA;AAAlB;AAAA;AAAA;AAAA;AAAA,gBAAH,gBAAkC,QAAC,MAAD;AAAQ,UAAA,QAAQ,EAAEC;AAAlB;AAAA;AAAA;AAAA;AAAA;AAD1C;AAAA;AAAA;AAAA;AAAA,cADF,eAIE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,GAAZ;AAAA,kBACGD,KAAK,gBAAG,QAAC,MAAD;AAAQ,UAAA,KAAK,EAAEA;AAAf;AAAA;AAAA;AAAA;AAAA,gBAAH,gBAA8B,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AADtC;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAaD,C,CAID;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;GAxCSD,G;;KAAAA,G;AA0CT,eAAeA,GAAf,C,CAGA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAKE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport Dashboard from './components/Dashboard/Dashboard';\nimport Market from './components/Market/Market';\nimport Login from './components/Login/Login';\nimport { AppContext } from './context/ContextLib'\nimport Dealer from './components/Login/Dealer';\nfunction App() {\n\n\n  const [token, setToken] = useState(localStorage.getItem('token'));\n\n\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route path=\"/dealer\" >\n          {token ? <Dashboard token={token}  /> : <Dealer setToken={setToken} />}\n        </Route>\n        <Route path=\"/\" >\n          {token ? <Market token={token} /> : <Login />}\n        </Route>\n      </Switch>\n    </BrowserRouter>\n  );\n\n}\n\n\n\n//   return (\n//     <AppContext.Provider value={{ token, setToken, userType, setUserType }}>\n//       <BrowserRouter>\n//         <Switch>\n//           {token ?\n//             <Route path=\"/dealer\" >\n//               <Dashboard token={token} />\n//             </Route>\n//             :\n//             <Route path=\"/dealer\" component={Dealer} />\n//           }\n//           <Route path=\"/market\" component={Market} />\n//           <Route path=\"/login\" component={Login} />\n//         </Switch>\n//       </BrowserRouter>\n//     </AppContext.Provider>\n//   );\n// }\n\nexport default App;\n\n\n//   if (!token) {\n//     return (\n\n\n//       <BrowserRouter>\n//         <Switch>\n//           <Route path=\"/login\"  >\n//             <Login setToken={setToken} setUserType={setUserType} />\n//           </Route>\n//           <Route path=\"/dealer\">\n//             <Delaer setToken={setToken} setUserType={setUserType} />\n//           </Route>\n//         </Switch>\n//       </BrowserRouter>)\n//   }\n\n//   if (userType === 'Dealer') {\n//     return (\n//       <AppContext.Provider value={{ token, setToken }}>\n//         <div className=\"wrapper\">\n//           <BrowserRouter>\n//             <Switch>\n//               <Route path=\"/dealer\" >\n//                 <Dashboard token={token} />\n//               </Route>\n//             </Switch>\n//           </BrowserRouter>\n//         </div>\n//       </AppContext.Provider>\n//     );\n//   }\n\n//   console.log(token);\n//   return (<BrowserRouter>\n//     <Switch>\n//       <Route path=\"/login/market\">\n//         <Market />\n//       </Route>\n\n//     </Switch>\n//   </BrowserRouter>)\n// }\n\n\n\n\n  // if (userType === 'Dealer') {\n  //   if (token) {\n  //     return (\n  //       <Route path=\"/dashboard\" >\n  //         <Dashboard token={token} />\n  //       </Route>\n  //     );\n  //   }\n  //   return (\n  //     <Route path=\"/dealer\" >\n  //       <Dealer setToken={setToken} setUserType={setUserType} />\n  //     </Route>\n  //   );\n  // }\n  // else if (token) {\n  //   return (\n  //     <Route path=\"/market\" >\n  //       <Market />\n  //     </Route>\n  //   );\n  // }\n  // else {\n  //   return (\n  //     <Route path=\"/login\" >\n  //       <Login />\n  //     </Route>\n  //   );\n  // }\n"]},"metadata":{},"sourceType":"module"}