{"ast":null,"code":"var _jsxFileName = \"/Users/mert/Desktop/vt_odev/client/vita-market/src/components/Basket/Address.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Card, CardHeader, CardContent, CardActions, Button } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction getAddress(user_id) {\n  return fetch(`http://localhost:3000/user/adress/${user_id}`, {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  }).then(response => response.json());\n}\n\nexport default function Address({\n  user_id\n}) {\n  _s();\n\n  const [address, setAddress] = useState();\n  useEffect(() => {\n    fetchAdress();\n  }, []);\n\n  const fetchAdress = () => {\n    getAddress(user_id).then(response => {\n      setAddress(response);\n    });\n  };\n\n  const DrawAddress = () => {\n    console.log(address);\n\n    if (address) {\n      return /*#__PURE__*/_jsxDEV(Card, {\n        children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n          title: \"Address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: address.adress\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: address.city\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            color: \"primary\",\n            onClick: fetchAdress,\n            children: \"Update\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading ...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(DrawAddress, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Address, \"No/ZgULY7Vt/oBqRyPE7FAxcXmc=\");\n\n_c = Address;\n{\n  /* <input\n  type=\"text\"\n  placeholder={address.adress}\n  value={address.adress}\n  onChange={e => {\n     setAddress({\n         ...address,\n         adress: e.target.value,\n     });\n  }}\n  />\n  <input\n  type=\"text\"\n  placeholder={address.city}\n  value={address.city}\n  onChange={e => {\n     setAddress({\n         ...address,\n         postal_code: e.target.value,\n     });\n  }} */\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"Address\");","map":{"version":3,"sources":["/Users/mert/Desktop/vt_odev/client/vita-market/src/components/Basket/Address.js"],"names":["React","useEffect","useState","Card","CardHeader","CardContent","CardActions","Button","getAddress","user_id","fetch","method","headers","then","response","json","Address","address","setAddress","fetchAdress","DrawAddress","console","log","adress","city"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,IAAT,EAAeC,UAAf,EAA2BC,WAA3B,EAAwCC,WAAxC,EAAqDC,MAArD,QAAmE,mBAAnE;;;AAEA,SAASC,UAAT,CAAoBC,OAApB,EAA6B;AACzB,SAAOC,KAAK,CAAE,qCAAoCD,OAAQ,EAA9C,EAAiD;AACzDE,IAAAA,MAAM,EAAE,KADiD;AAEzDC,IAAAA,OAAO,EAAE;AACL,sBAAgB;AADX;AAFgD,GAAjD,CAAL,CAMFC,IANE,CAMGC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EANf,CAAP;AAOH;;AAED,eAAe,SAASC,OAAT,CAAiB;AAAEP,EAAAA;AAAF,CAAjB,EAA8B;AAAA;;AACzC,QAAM,CAACQ,OAAD,EAAUC,UAAV,IAAwBhB,QAAQ,EAAtC;AACAD,EAAAA,SAAS,CAAC,MAAM;AACZkB,IAAAA,WAAW;AACd,GAFQ,EAEN,EAFM,CAAT;;AAKA,QAAMA,WAAW,GAAG,MAAM;AACtBX,IAAAA,UAAU,CAACC,OAAD,CAAV,CAAoBI,IAApB,CAAyBC,QAAQ,IAAI;AACjCI,MAAAA,UAAU,CAACJ,QAAD,CAAV;AACH,KAFD;AAGH,GAJD;;AAMA,QAAMM,WAAW,GAAG,MAAM;AACtBC,IAAAA,OAAO,CAACC,GAAR,CAAYL,OAAZ;;AACA,QAAIA,OAAJ,EAAa;AACT,0BACI,QAAC,IAAD;AAAA,gCACI,QAAC,UAAD;AAAY,UAAA,KAAK,EAAC;AAAlB;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,WAAD;AAAA,kCACI;AAAA,sBAAIA,OAAO,CAACM;AAAZ;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAA,sBAAIN,OAAO,CAACO;AAAZ;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAMI,QAAC,WAAD;AAAA,iCACI,QAAC,MAAD;AAAQ,YAAA,KAAK,EAAC,SAAd;AAAwB,YAAA,OAAO,EAAEL,WAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBANJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ;AAcH,KAfD,MAeM;AACF,0BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ;AAGH;AACJ,GAtBD;;AA0BA,sBAEI;AAAA,2BAEI,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,UAFJ;AAQH;;GA/CuBH,O;;KAAAA,O;AAiDxB;AAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAM","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Card, CardHeader, CardContent, CardActions, Button } from '@material-ui/core';\n\nfunction getAddress(user_id) {\n    return fetch(`http://localhost:3000/user/adress/${user_id}`, {\n        method: 'GET',\n        headers: {\n            'Content-Type': 'application/json',\n        },\n    })\n        .then(response => response.json())\n}\n\nexport default function Address({ user_id }) {\n    const [address, setAddress] = useState();\n    useEffect(() => {\n        fetchAdress()\n    }, []);\n\n\n    const fetchAdress = () => {\n        getAddress(user_id).then(response => {\n            setAddress(response);\n        });\n    };\n\n    const DrawAddress = () => {\n        console.log(address);\n        if (address) {\n            return (\n                <Card>\n                    <CardHeader title=\"Address\" />\n                    <CardContent>\n                        <p>{address.adress}</p>\n                        <p>{address.city}</p>\n                    </CardContent>\n                    <CardActions>\n                        <Button color=\"primary\" onClick={fetchAdress}>\n                            Update\n                        </Button>\n                    </CardActions>\n                </Card>\n            );\n        }else { \n            return (\n                <p>Loading ...</p>\n            );\n        }\n    };\n\n\n\n    return (\n\n        <div>\n           \n            <DrawAddress />\n        </div>\n\n    );\n}\n\n{/* <input\ntype=\"text\"\nplaceholder={address.adress}\nvalue={address.adress}\nonChange={e => {\n    setAddress({\n        ...address,\n        adress: e.target.value,\n    });\n}}\n/>\n<input\ntype=\"text\"\nplaceholder={address.city}\nvalue={address.city}\nonChange={e => {\n    setAddress({\n        ...address,\n        postal_code: e.target.value,\n    });\n}} */}"]},"metadata":{},"sourceType":"module"}