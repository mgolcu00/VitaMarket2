{"ast":null,"code":"var _jsxFileName = \"/Users/mert/Desktop/vt_odev/client/vita-market/src/components/Market/Market.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport VitaminCard from '../../Modals/VitaminCard';\nimport ProteinCard from '../../Modals/ProteinCard';\nimport { Grid, GridList } from '@material-ui/core';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nasync function fetchVitamins() {\n  return fetch('http://localhost:3000/vitamin/', {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  }).then(data => data.json());\n}\n\nasync function fetchProteins() {\n  return fetch('http://localhost:3000/protein/', {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  }).then(data => data.json());\n}\n\nexport default function Market({\n  addToCart\n}) {\n  _s();\n\n  const [vitamins, setVitamins] = useState([]);\n  const [proteins, setProteins] = useState([]);\n  const [category, setCategory] = useState('vitamins');\n  useEffect(() => {\n    fetchVitamins().then(data => {\n      console.log(data);\n      setVitamins(data);\n    });\n    fetchProteins().then(data => {\n      console.log(data);\n      setProteins(data);\n    });\n  }, []);\n  console.log(addToCart);\n  test();\n\n  const VitaminList = () => {\n    return /*#__PURE__*/_jsxDEV(GridList, {\n      spacing: 2,\n      children: vitamins.map(v => /*#__PURE__*/_jsxDEV(VitaminCard, {\n        vitamin: v,\n        addToCart: () => {\n          addToCart(v.product.id);\n        }\n      }, v.product.name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 36\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this);\n  };\n\n  const ProteinList = () => {\n    return /*#__PURE__*/_jsxDEV(GridList, {\n      spacing: 2,\n      children: proteins.map(p => /*#__PURE__*/_jsxDEV(ProteinCard, {\n        protein: p\n      }, p.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 36\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this);\n  };\n\n  const ListWithCategory = () => {\n    if (category === 'vitamins') {\n      return /*#__PURE__*/_jsxDEV(VitaminList, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 20\n      }, this);\n    } else if (category === 'proteins') {\n      return /*#__PURE__*/_jsxDEV(ProteinList, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 20\n      }, this);\n    }\n  };\n\n  const changeCategory = e => {\n    console.log(e);\n    setCategory(e);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Market\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: e => changeCategory('vitamins'),\n      children: \"Vitaminler\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: e => changeCategory('proteins'),\n      children: \"Proteinler\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ListWithCategory, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Market, \"fO4uQC6/O1/sxO2x5ErOtjs0sRw=\");\n\n_c = Market;\nMarket.propTypes = {\n  addToCart: PropTypes.func.isRequired,\n  test: PropTypes.func.isRequired\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"Market\");","map":{"version":3,"sources":["/Users/mert/Desktop/vt_odev/client/vita-market/src/components/Market/Market.js"],"names":["React","useEffect","useState","VitaminCard","ProteinCard","Grid","GridList","PropTypes","fetchVitamins","fetch","method","headers","then","data","json","fetchProteins","Market","addToCart","vitamins","setVitamins","proteins","setProteins","category","setCategory","console","log","test","VitaminList","map","v","product","id","name","ProteinList","p","ListWithCategory","changeCategory","e","propTypes","func","isRequired"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport VitaminCard from '../../Modals/VitaminCard';\nimport ProteinCard from '../../Modals/ProteinCard';\nimport { Grid, GridList } from '@material-ui/core'\nimport PropTypes from 'prop-types';\n\nasync function fetchVitamins() {\n    return fetch('http://localhost:3000/vitamin/', {\n        method: 'GET',\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    }).then(data => data.json());\n}\nasync function fetchProteins() {\n    return fetch('http://localhost:3000/protein/', {\n        method: 'GET',\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    })\n        .then(data => data.json())\n}\nexport default function Market({ addToCart }) {\n    const [vitamins, setVitamins] = useState([]);\n    const [proteins, setProteins] = useState([]);\n    const [category, setCategory] = useState('vitamins');\n    useEffect(() => {\n        fetchVitamins().then(data => {\n            console.log(data);\n            setVitamins(data);\n        })\n        fetchProteins().then(data => {\n            console.log(data);\n            setProteins(data);\n        })\n    }, [])\n    console.log(addToCart);\n    test()\n    const VitaminList = () => {\n        return (\n            <GridList spacing={2} >\n                {vitamins.map(v => <VitaminCard key={v.product.name} vitamin={v} addToCart={() => { addToCart(v.product.id) }}  />)}\n            </GridList>\n        );\n    }\n    const ProteinList = () => {\n        return (\n            <GridList spacing={2} >\n                {proteins.map(p => <ProteinCard key={p.id} protein={p} />)}\n            </GridList>\n        );\n    }\n    const ListWithCategory = () => {\n        if (category === 'vitamins') {\n            return <VitaminList />;\n        } else if (category === 'proteins') {\n            return <ProteinList />;\n        }\n    }\n    const changeCategory = (e) => {\n        console.log(e);\n        setCategory(e)\n\n    }\n    return (\n        <div>\n            <h2>Market</h2>\n            <button onClick={(e) => changeCategory('vitamins')}>Vitaminler</button>\n            <button onClick={(e) => changeCategory('proteins')}>Proteinler</button>\n            <ListWithCategory />\n        </div>\n\n    );\n}\nMarket.propTypes = {\n    addToCart: PropTypes.func.isRequired,\n    test: PropTypes.func.isRequired\n}"]},"metadata":{},"sourceType":"module"}