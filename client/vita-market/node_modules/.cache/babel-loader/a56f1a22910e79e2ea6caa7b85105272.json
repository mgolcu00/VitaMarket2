{"ast":null,"code":"var _jsxFileName = \"/Users/mert/Desktop/vt_odev/client/vita-market/src/components/Market/Market.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport VitaminCard from '../../Modals/VitaminCard';\nimport ProteinCard from '../../Modals/ProteinCard';\nimport { Grid, GridList } from '@material-ui/core';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nasync function fetchVitamins() {\n  return fetch('http://localhost:3000/vitamin/', {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  }).then(data => data.json());\n}\n\nasync function fetchProteins() {\n  return fetch('http://localhost:3000/protein/', {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  }).then(data => data.json());\n}\n\nexport default function Market(props) {\n  _s();\n\n  console.log(props);\n  const [vitamins, setVitamins] = useState([]);\n  const [proteins, setProteins] = useState([]);\n  const [category, setCategory] = useState('vitamins');\n  useEffect(() => {\n    fetchVitamins().then(data => {\n      console.log(data);\n      setVitamins(data);\n    });\n    fetchProteins().then(data => {\n      console.log(data);\n      setProteins(data);\n    });\n  }, []);\n\n  const VitaminList = () => {\n    return /*#__PURE__*/_jsxDEV(GridList, {\n      spacing: 2,\n      children: vitamins.map(v => /*#__PURE__*/_jsxDEV(VitaminCard, {\n        vitamin: v,\n        addToCart: () => {\n          console.log(v.product.id);\n          props.addToCart(v.product.id);\n        }\n      }, v.product.name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 36\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this);\n  };\n\n  const ProteinList = () => {\n    return /*#__PURE__*/_jsxDEV(GridList, {\n      spacing: 2,\n      children: proteins.map(p => /*#__PURE__*/_jsxDEV(ProteinCard, {\n        protein: p\n      }, p.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 36\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this);\n  };\n\n  const ListWithCategory = () => {\n    if (category === 'vitamins') {\n      return /*#__PURE__*/_jsxDEV(VitaminList, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 20\n      }, this);\n    } else if (category === 'proteins') {\n      return /*#__PURE__*/_jsxDEV(ProteinList, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 20\n      }, this);\n    }\n  };\n\n  const changeCategory = e => {\n    console.log(e);\n    setCategory(e);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Market\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: e => changeCategory('vitamins'),\n      children: \"Vitaminler\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: e => changeCategory('proteins'),\n      children: \"Proteinler\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ListWithCategory, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Market, \"fO4uQC6/O1/sxO2x5ErOtjs0sRw=\");\n\n_c = Market;\nMarket.propTypes = {\n  addToCart: PropTypes.func.isRequired\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"Market\");","map":{"version":3,"sources":["/Users/mert/Desktop/vt_odev/client/vita-market/src/components/Market/Market.js"],"names":["React","useEffect","useState","VitaminCard","ProteinCard","Grid","GridList","PropTypes","fetchVitamins","fetch","method","headers","then","data","json","fetchProteins","Market","props","console","log","vitamins","setVitamins","proteins","setProteins","category","setCategory","VitaminList","map","v","product","id","addToCart","name","ProteinList","p","ListWithCategory","changeCategory","e","propTypes","func","isRequired"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport VitaminCard from '../../Modals/VitaminCard';\nimport ProteinCard from '../../Modals/ProteinCard';\nimport { Grid, GridList } from '@material-ui/core'\nimport PropTypes from 'prop-types';\n\nasync function fetchVitamins() {\n    return fetch('http://localhost:3000/vitamin/', {\n        method: 'GET',\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    }).then(data => data.json());\n}\nasync function fetchProteins() {\n    return fetch('http://localhost:3000/protein/', {\n        method: 'GET',\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    })\n        .then(data => data.json())\n}\nexport default function Market(props) {\n    console.log(props);\n    const [vitamins, setVitamins] = useState([]);\n    const [proteins, setProteins] = useState([]);\n    const [category, setCategory] = useState('vitamins');\n    useEffect(() => {\n        fetchVitamins().then(data => {\n            console.log(data);\n            setVitamins(data);\n        })\n        fetchProteins().then(data => {\n            console.log(data);\n            setProteins(data);\n        })\n    }, [])\n    const VitaminList = () => {\n        return (\n            <GridList spacing={2} >\n                {vitamins.map(v => <VitaminCard key={v.product.name} vitamin={v} addToCart={() => {\n                    console.log(v.product.id);\n                    props.addToCart(v.product.id)\n                }} />)}\n            </GridList>\n        );\n    }\n    const ProteinList = () => {\n        return (\n            <GridList spacing={2} >\n                {proteins.map(p => <ProteinCard key={p.id} protein={p} />)}\n            </GridList>\n        );\n    }\n    const ListWithCategory = () => {\n        if (category === 'vitamins') {\n            return <VitaminList />;\n        } else if (category === 'proteins') {\n            return <ProteinList />;\n        }\n    }\n    const changeCategory = (e) => {\n        console.log(e);\n        setCategory(e)\n\n    }\n    return (\n        <div>\n            <h2>Market</h2>\n            <button onClick={(e) => changeCategory('vitamins')}>Vitaminler</button>\n            <button onClick={(e) => changeCategory('proteins')}>Proteinler</button>\n            <ListWithCategory />\n        </div>\n\n    );\n}\nMarket.propTypes = {\n    addToCart: PropTypes.func.isRequired\n}"]},"metadata":{},"sourceType":"module"}