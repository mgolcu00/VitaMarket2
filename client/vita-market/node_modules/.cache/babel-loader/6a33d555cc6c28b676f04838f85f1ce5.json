{"ast":null,"code":"var _jsxFileName = \"/Users/mert/Desktop/vt_odev/client/vita-market/src/components/Basket/Address.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Card, CardHeader, CardContent, CardActions, Button, duration } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction getAddress(user_id) {\n  return fetch(`http://localhost:3000/user/adress/${user_id}`, {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  }).then(response => response.json());\n}\n\nfunction upadateAdress(user_id, address) {\n  return fetch(`http://localhost:3000/user/adress/update`, {\n    method: 'PUT',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      adress: address.adress,\n      city: address.city,\n      user_id: user_id\n    })\n  });\n}\n\nexport default function Address({\n  user_id\n}) {\n  _s();\n\n  const [address, setAddress] = useState();\n  useEffect(() => {\n    fetchAdress();\n  }, []);\n\n  const fetchAdress = () => {\n    getAddress(user_id).then(response => {\n      setAddress(response);\n    });\n  };\n\n  const updateAddress = () => {\n    updateAddress;\n  };\n\n  const DrawAddress = () => {\n    console.log(address);\n\n    if (address) {\n      return /*#__PURE__*/_jsxDEV(Card, {\n        children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n          title: \"Address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"adress\",\n            value: address.adress,\n            onChange: e => setAddress(address => ({ ...address,\n              adress: e.target.value\n            })),\n            style: {\n              width: '100%'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"postal code\",\n            value: address.city,\n            onChange: e => setAddress(address => ({ ...address,\n              city: e.target.value\n            }))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            color: \"primary\",\n            onClick: fetchAdress,\n            children: \"Update\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading ...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(DrawAddress, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Address, \"No/ZgULY7Vt/oBqRyPE7FAxcXmc=\");\n\n_c = Address;\n\nvar _c;\n\n$RefreshReg$(_c, \"Address\");","map":{"version":3,"sources":["/Users/mert/Desktop/vt_odev/client/vita-market/src/components/Basket/Address.js"],"names":["React","useEffect","useState","Card","CardHeader","CardContent","CardActions","Button","duration","getAddress","user_id","fetch","method","headers","then","response","json","upadateAdress","address","body","JSON","stringify","adress","city","Address","setAddress","fetchAdress","updateAddress","DrawAddress","console","log","e","target","value","width"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Card, CardHeader, CardContent, CardActions, Button, duration } from '@material-ui/core';\n\nfunction getAddress(user_id) {\n    return fetch(`http://localhost:3000/user/adress/${user_id}`, {\n        method: 'GET',\n        headers: {\n            'Content-Type': 'application/json',\n        },\n    })\n        .then(response => response.json())\n}\nfunction upadateAdress(user_id, address) {\n    return fetch(`http://localhost:3000/user/adress/update`, {\n        method: 'PUT',\n        headers: {\n            'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n            adress: address.adress,\n            city: address.city,\n            user_id: user_id,\n        }),\n    })\n}\nexport default function Address({ user_id }) {\n    const [address, setAddress] = useState();\n    useEffect(() => {\n        fetchAdress()\n    }, []);\n\n\n    const fetchAdress = () => {\n        getAddress(user_id).then(response => {\n            setAddress(response);\n        });\n    };\n\n    const updateAddress = () => {\n        updateAddress\n    }\n    const DrawAddress = () => {\n        console.log(address);\n        if (address) {\n            return (\n                <Card>\n                    <CardHeader title=\"Address\" />\n                    <CardContent>\n                        <input\n                            type=\"text\"\n                            placeholder=\"adress\"\n                            value={address.adress}\n                            onChange={e => setAddress(address => ({ ...address, adress: e.target.value }))}\n                            style={{ width: '100%' }}\n\n                        />\n                        <br></br>\n                        <br></br>\n                        <input\n                            type=\"text\"\n                            placeholder=\"postal code\"\n                            value={address.city}\n                            onChange={e => setAddress(address => ({ ...address, city: e.target.value }))}\n                        />\n                    </CardContent>\n                    <CardActions>\n                        <Button color=\"primary\" onClick={fetchAdress}>\n                            Update\n                        </Button>\n                    </CardActions>\n                </Card>\n            );\n        } else {\n            return (\n                <p>Loading ...</p>\n            );\n        }\n    };\n\n\n\n    return (\n\n        <div>\n\n            <DrawAddress />\n        </div>\n\n    );\n}\n"]},"metadata":{},"sourceType":"module"}