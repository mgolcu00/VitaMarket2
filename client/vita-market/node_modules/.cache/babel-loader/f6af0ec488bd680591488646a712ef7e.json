{"ast":null,"code":"var _jsxFileName = \"/Users/mert/Desktop/vt_odev/client/vita-market/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './App.css';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport Dashboard from './components/Dashboard/Dashboard';\nimport Market from './components/Market/Market';\nimport Login from './components/Login/Login';\nimport { AppContext } from './context/ContextLib';\nimport Dealer from './components/Login/Dealer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [userType, setUserType] = useState();\n  const [token, setToken] = useState();\n\n  if (userType === 'Dealer') {\n    if (token) {\n      return /*#__PURE__*/_jsxDEV(Dashboard, {\n        token: token\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(Dealer, {\n      setToken: setToken,\n      setUserType: setUserType\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this);\n  } else if (token) {\n    return /*#__PURE__*/_jsxDEV(Market, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this);\n  }\n} //   return (\n//     <AppContext.Provider value={{ token, setToken, userType, setUserType }}>\n//       <BrowserRouter>\n//         <Switch>\n//           {token ?\n//             <Route path=\"/dealer\" >\n//               <Dashboard token={token} />\n//             </Route>\n//             :\n//             <Route path=\"/dealer\" component={Dealer} />\n//           }\n//           <Route path=\"/market\" component={Market} />\n//           <Route path=\"/login\" component={Login} />\n//         </Switch>\n//       </BrowserRouter>\n//     </AppContext.Provider>\n//   );\n// }\n\n\n_s(App, \"sjdWnEgX8gOnIbopRlcIZJRimaA=\");\n\n_c = App;\nexport default App; //   if (!token) {\n//     return (\n//       <BrowserRouter>\n//         <Switch>\n//           <Route path=\"/login\"  >\n//             <Login setToken={setToken} setUserType={setUserType} />\n//           </Route>\n//           <Route path=\"/dealer\">\n//             <Delaer setToken={setToken} setUserType={setUserType} />\n//           </Route>\n//         </Switch>\n//       </BrowserRouter>)\n//   }\n//   if (userType === 'Dealer') {\n//     return (\n//       <AppContext.Provider value={{ token, setToken }}>\n//         <div className=\"wrapper\">\n//           <BrowserRouter>\n//             <Switch>\n//               <Route path=\"/dealer\" >\n//                 <Dashboard token={token} />\n//               </Route>\n//             </Switch>\n//           </BrowserRouter>\n//         </div>\n//       </AppContext.Provider>\n//     );\n//   }\n//   console.log(token);\n//   return (<BrowserRouter>\n//     <Switch>\n//       <Route path=\"/login/market\">\n//         <Market />\n//       </Route>\n//     </Switch>\n//   </BrowserRouter>)\n// }\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/mert/Desktop/vt_odev/client/vita-market/src/App.js"],"names":["React","useState","BrowserRouter","Route","Switch","Dashboard","Market","Login","AppContext","Dealer","App","userType","setUserType","token","setToken"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,WAAP;AACA,SAASC,aAAT,EAAwBC,KAAxB,EAA+BC,MAA/B,QAA6C,kBAA7C;AACA,OAAOC,SAAP,MAAsB,kCAAtB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,KAAP,MAAkB,0BAAlB;AACA,SAASC,UAAT,QAA2B,sBAA3B;AACA,OAAOC,MAAP,MAAmB,2BAAnB;;;AACA,SAASC,GAAT,GAAe;AAAA;;AAGb,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BX,QAAQ,EAAxC;AACA,QAAM,CAACY,KAAD,EAAQC,QAAR,IAAoBb,QAAQ,EAAlC;;AAKA,MAAGU,QAAQ,KAAK,QAAhB,EAAyB;AACvB,QAAGE,KAAH,EAAS;AACP,0BACE,QAAC,SAAD;AAAW,QAAA,KAAK,EAAEA;AAAlB;AAAA;AAAA;AAAA;AAAA,cADF;AAGD;;AACD,wBACE,QAAC,MAAD;AAAQ,MAAA,QAAQ,EAAEC,QAAlB;AAA4B,MAAA,WAAW,EAAEF;AAAzC;AAAA;AAAA;AAAA;AAAA,YADF;AAGD,GATD,MAUK,IAAGC,KAAH,EAAS;AACZ,wBACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADF;AAGD,GAJI,MAKD;AACF,wBACE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,YADF;AAGD;AACF,C,CAID;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;GAlDSH,G;;KAAAA,G;AAoDT,eAAeA,GAAf,C,CAGA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA","sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport Dashboard from './components/Dashboard/Dashboard';\nimport Market from './components/Market/Market';\nimport Login from './components/Login/Login';\nimport { AppContext } from './context/ContextLib'\nimport Dealer from './components/Login/Dealer';\nfunction App() {\n\n\n  const [userType, setUserType] = useState();\n  const [token, setToken] = useState();\n\n\n\n\n  if(userType === 'Dealer'){\n    if(token){\n      return(\n        <Dashboard token={token} />\n      );\n    }\n    return(\n      <Dealer setToken={setToken} setUserType={setUserType} />\n    );\n  }\n  else if(token){\n    return(\n      <Market />\n    );\n  }\n  else{\n    return(\n      <Login />\n    );\n  }\n}\n\n\n\n//   return (\n//     <AppContext.Provider value={{ token, setToken, userType, setUserType }}>\n//       <BrowserRouter>\n//         <Switch>\n//           {token ?\n//             <Route path=\"/dealer\" >\n//               <Dashboard token={token} />\n//             </Route>\n//             :\n//             <Route path=\"/dealer\" component={Dealer} />\n//           }\n//           <Route path=\"/market\" component={Market} />\n//           <Route path=\"/login\" component={Login} />\n//         </Switch>\n//       </BrowserRouter>\n//     </AppContext.Provider>\n//   );\n// }\n\nexport default App;\n\n\n//   if (!token) {\n//     return (\n\n\n//       <BrowserRouter>\n//         <Switch>\n//           <Route path=\"/login\"  >\n//             <Login setToken={setToken} setUserType={setUserType} />\n//           </Route>\n//           <Route path=\"/dealer\">\n//             <Delaer setToken={setToken} setUserType={setUserType} />\n//           </Route>\n//         </Switch>\n//       </BrowserRouter>)\n//   }\n\n//   if (userType === 'Dealer') {\n//     return (\n//       <AppContext.Provider value={{ token, setToken }}>\n//         <div className=\"wrapper\">\n//           <BrowserRouter>\n//             <Switch>\n//               <Route path=\"/dealer\" >\n//                 <Dashboard token={token} />\n//               </Route>\n//             </Switch>\n//           </BrowserRouter>\n//         </div>\n//       </AppContext.Provider>\n//     );\n//   }\n\n//   console.log(token);\n//   return (<BrowserRouter>\n//     <Switch>\n//       <Route path=\"/login/market\">\n//         <Market />\n//       </Route>\n\n//     </Switch>\n//   </BrowserRouter>)\n// }\n\n"]},"metadata":{},"sourceType":"module"}